{"version":3,"sources":["js/CreatePreviewImage.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","js/HomePage.js"],"names":["CreatePreviewImage","data","pixelHeight","pixelWidth","tagType","colorCode","bg","img","defName","defSecond","quantity","colorCodeToClass","splitClasses","newLineContents","name","signColor","split","toLowerCase","parseFloat","height","width","xs","md","lg","className","secondLine","thirdLine","style","textAlign","margin","display","flexDirection","map","mapItem","index","key","DEVICE_SIZES","Col","React","forwardRef","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","_extends","classNames","apply","concat","displayName","Row","noGutters","_props$as","otherProps","decoratedBsPrefix","defaultProps","HomePage","localVersion","localStorage","getItem","console","log","window","location","reload","setItem","to"],"mappings":"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","file":"static/js/11.45cb5527.chunk.js","sourcesContent":["import React from 'react';\r\nimport { \r\n    Col,\r\n    Row,\r\n    Container\r\n} from 'react-bootstrap';\r\nimport '../css/tags.css';\r\nimport '../css/signcolor.css';\r\n\r\nfunction colorCodeToClass(colorCode){\r\n    /*\r\n    tagType obj are the classes to apply and default texts on each\r\n    bg background class, \r\n    img is the deer head logo, null-space is the default class that deletes the class\r\n    in the event that there is no deer head\r\n    defName: default Name placeholder\r\n    defSecond: default second line text placeholder\r\n    quantity: the default quantity for each tag type(unchangeable, only for info purposes)\r\n    -\r\n    see CreateSignColor for tag id list\r\n    */\r\n    let tagType = {\r\n        bg: \"\",\r\n        img: \"null-space\",\r\n        defName: \"Name\",\r\n        defSecond: \"City, ST\",\r\n        quantity: \"x2\"\r\n    };\r\n\r\n    // translate color code to image type using classes\r\n    if(colorCode === 1){\r\n                \r\n        // 1: green pin no deerhead(normal nametag and default selection)\r\n        tagType.bg = \"tag-green\";\r\n    }else if(colorCode === 2){\r\n\r\n        // 2: green magnet deerhead\r\n        tagType.bg = \"tag-greenmag\";\r\n        tagType.img = \"dvgold-img\";\r\n    }else if(colorCode === 3){\r\n\r\n        // 3: bronze magnet engraved deerhead\r\n        tagType.bg = \"tag-bronze\";\r\n        tagType.img = \"dvwhite-img\";\r\n    }else if(colorCode === 4){\r\n\r\n        // 4: outdoor tags\r\n        tagType.bg = \"tag-outdoor\";\r\n        tagType.img = \"dvwhite-img\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 5){\r\n\r\n        // 5: sign, add details in comments\r\n        tagType.bg = \"tag-sign\";\r\n        tagType.defName = \"Sign\";\r\n        tagType.defSecond = \"Put details in the comments\";\r\n        tagType.quantity = \"\";\r\n    }else if(colorCode === 7){\r\n\r\n        // 7: repeat 1 but with title instead of city, st\r\n        tagType.bg = \"tag-green\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 8){\r\n\r\n        // 8: repeat 2 but with title instead of city, st\r\n        tagType.bg = \"tag-greenmag\";\r\n        tagType.img = \"dvgold-img\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 9){\r\n\r\n        // 9: repeat 3 but with title instead of city, st\r\n        tagType.bg = \"tag-bronze\";\r\n        tagType.img = \"dvwhite-img\";\r\n        tagType.defSecond = \"Title\";\r\n    }else if(colorCode === 10){\r\n\r\n        // 10: repeat 4 but with title instead of city, st\r\n        tagType.bg = \"tag-outdoor\";\r\n        tagType.defSecond = \"Title\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 11){\r\n\r\n        // 11: basket check tag\r\n        tagType.bg = \"tag-basket\";\r\n        tagType.defName = \"<p style='font-size:60px;position:relative;top:-20%;'>&#8226;</p>\";\r\n        tagType.defSecond = \"<p style='font-size:19px;position:relative;bottom:30%;'>Basket Check</p>\";\r\n        tagType.quantity = \"\";\r\n    }else if(colorCode === 12){\r\n\r\n        // 12: outdoor tag for ski patrol\r\n        tagType.bg = \"tag-patrol\";\r\n        tagType.img = \"dvpatrol-img\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 13){\r\n\r\n        // 13: old outdoor tags that fit inside old mtn ops uniforms\r\n        tagType.bg = \"tag-oldoutdoor\";\r\n        tagType.quantity = \"x3\";\r\n    }else if(colorCode === 14){\r\n\r\n        // 14: black diamond tags\r\n        tagType.bg = \"tag-blackdiamond\";\r\n        tagType.img = \"dvblackdiamond-img\";\r\n        tagType.quantity = \"x2\";\r\n    }else if(colorCode === 11){\r\n\r\n    }else{\r\n\r\n        // anything else, other, details in comments\r\n        tagType.bg = \"tag-other\";\r\n    }\r\n\r\n    // return value, e.g. tagType = { bg: tag-green, img: null-space }\r\n    return tagType;\r\n};\r\n\r\n\r\nfunction CreatePreviewImage(data) {\r\n    /*\r\n    data use format for non signs: \r\n    <CreatePreviewImage data={ \r\n        name,\r\n        secondLine,\r\n        colorCode,\r\n        thirdLine(if it exists)\r\n    } />\r\n    -\r\n    data use format for signs: \r\n    <CreatePreviewImage data={ \r\n        name,\r\n        height,\r\n        width,\r\n        signColor,\r\n        attachment,\r\n        thickness\r\n    } />\r\n    */\r\n\r\n    // console.log(data); // correct injection would be e.g. data.data.colorCode\r\n    let tagType = colorCodeToClass(data.data.colorCode);\r\n    // console.log(tagType.img);\r\n    tagType.bg = tagType.bg + \"  justify-content-between\";\r\n\r\n    // if custom sign\r\n    let pixelHeight;\r\n    let pixelWidth;\r\n    let splitClasses = [];\r\n    let newLineContents = data.data.name;\r\n    // console.log(data.data.colorCode);\r\n    \r\n    if(data.data.colorCode === 5){\r\n        // grab signcolor classes\r\n        // console.log(data.data.quantity);\r\n        splitClasses = data.data.signColor.split(\" / \");\r\n        splitClasses[0] = \"color-\" + splitClasses[0].toLowerCase();\r\n        splitClasses[1] = \"bg-\" + splitClasses[1].toLowerCase();\r\n        \r\n        pixelHeight = parseFloat(data.data.height);\r\n        pixelWidth = parseFloat(data.data.width);\r\n\r\n        // do sign maths\r\n        pixelHeight *= 50;\r\n        pixelWidth *= 50;\r\n        pixelHeight = pixelHeight + \"px\";\r\n        pixelWidth = pixelWidth + \"px\";\r\n\r\n        newLineContents = newLineContents.split(\"\\n\");\r\n        // console.log(newLineContents);\r\n    };\r\n    \r\n\r\n    // return page with compiled data\r\n    return (\r\n        <Col xs={12} md={6} lg={4} className=\"px-0\">\r\n            {\r\n                (data.data.colorCode !== 5) &&\r\n                <Container>\r\n                    <Row className={ tagType.bg }>\r\n                        {\r\n                            !(tagType.img === \"null-space\") &&\r\n                            <div className={ tagType.img }>\r\n                            </div>\r\n                        }\r\n                        <div className=\"title-parent\">\r\n                            <div className=\"title-text justify-content-center\">\r\n                                { data.data.name }\r\n                            </div>\r\n                            <div className=\"smaller-text justify-content-center\">\r\n                                { data.data.secondLine }\r\n                            </div>\r\n                            <div className=\"smaller-text justify-content-center\">\r\n                                { data.data.thirdLine }\r\n                            </div>\r\n                        </div>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n            {\r\n                (data.data.colorCode === 5) &&\r\n                <Container style={{ \r\n                    width: pixelWidth,\r\n                    height: pixelHeight,\r\n                    textAlign: \"center\",\r\n                    margin: \"auto\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\"\r\n                }} className={ splitClasses[1] + \" \" + splitClasses[0] + \" bg-basic\" }>\r\n                    <div style={{ display: \"flex\", flexDirection: \"column\", margin: \"auto\" }}>\r\n                        {\r\n                            newLineContents.map((mapItem, index) => \r\n                                <Row className=\"justify-content-center\" key={ index }>{ mapItem }</Row>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </Container>\r\n            }\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default CreatePreviewImage;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.defaultProps = defaultProps;\nexport default Row;","import React from 'react';\r\nimport { \r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button\r\n} from 'react-bootstrap';\r\nimport '../css/nav.css';\r\nimport CreatePreviewImage from './CreatePreviewImage.js';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction HomePage() {\r\n    // versioning, important for force updates, \r\n    // !!!! ----------------------- increment to force a user update ----------------------- !!!!\r\n    const appVersion = 7.0004;\r\n    let localVersion = parseFloat(localStorage.getItem(\"version\")); // need to parseFloat as it stores as a string\r\n    console.log(\"local version: \" + localVersion);\r\n    console.log(\"latest version: \" + appVersion);\r\n    if(appVersion !== localVersion){\r\n        // if versions don't match, force refresh\r\n        window.location.reload(true);\r\n        \r\n        // update local\r\n        localStorage.setItem(\"version\", appVersion);\r\n    };\r\n\r\n    // here is where we list out the starting tags, data format first\r\n    const startingTags = [{\r\n        colorCode: 1,\r\n        name: \"Green Tag\",\r\n        secondLine: \"Indoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 2,\r\n        name: \"Green Tag Deerhead\",\r\n        secondLine: \"Indoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 3,\r\n        name: \"Bronze Tag\",\r\n        secondLine: \"Indoor Lodges\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 14,\r\n        name: \"Black Diamond Tag\",\r\n        secondLine: \"-----------------------------\",\r\n        thirdLine: \"Black Diamond Lodge\"\r\n    },{\r\n        colorCode: 4,\r\n        name: \"Outdoor Velcro Tag\",\r\n        secondLine: \"Regular Outdoor\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 12,\r\n        name: \"Ski Patrol\",\r\n        secondLine: \"Ski Patrol Only\",\r\n        thirdLine: \"\"\r\n    },{\r\n        colorCode: 13,\r\n        name: \"Old Black Card Tags\",\r\n        secondLine: \"Old Under Armour Window Tags\",\r\n        thirdLine: \"\"\r\n    },/*{\r\n        colorCode: 11,\r\n        name: \"Ski / Basket Check\",\r\n        secondLine: \"Click to Enter Details\"\r\n    },*/{\r\n        colorCode: 5,\r\n        name: \"Custom Engraved Sign\\nClick to Enter Details\",\r\n        signColor: \"White / Blue\",\r\n        width: 7,\r\n        height: 3\r\n    }];\r\n\r\n    return (\r\n        <Container className=\"mt-1 justify-content-center\">\r\n            <Row className=\"justify-content-center nav-h4-bar-bg\">\r\n                <Col xs=\"auto\">\r\n                    <h4 className=\"nav-h4-bar\">\r\n                        CLICK TAG TYPE TO GET STARTED or GOTO\r\n                    </h4>\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                    <NavLink to=\"/status\">\r\n                        <Button>\r\n                            ORDER STATUS\r\n                        </Button>\r\n                    </NavLink>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"justify-content-between mt-3\">\r\n                {\r\n                    startingTags.map(( mapItem, index ) => \r\n                        <Col className=\"p-0 mb-1 justify-content-center start-tag-container\" xs=\"auto\" key={ index }>\r\n                            {\r\n                                (mapItem.colorCode !== 5) &&\r\n                                <div className=\"start-tag\">\r\n                                    <NavLink to={ '/create/' + mapItem.colorCode }>\r\n                                            <CreatePreviewImage data={ mapItem } />\r\n                                    </NavLink>\r\n                                </div>\r\n                            }\r\n                            {\r\n                                (mapItem.colorCode === 5) &&\r\n                                <div className=\"start-tag-sign\">\r\n                                    <NavLink to={ '/sign' }>\r\n                                            <CreatePreviewImage data={ mapItem } />\r\n                                    </NavLink>\r\n                                </div>\r\n                            }\r\n                        </Col>\r\n                    )\r\n                }\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n  \r\nexport default HomePage;"],"sourceRoot":""}