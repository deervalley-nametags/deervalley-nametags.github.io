{"version":3,"sources":["../node_modules/dom-helpers/esm/matches.js","../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/react-overlays/esm/utils/ownerDocument.js","../node_modules/@restart/hooks/esm/useMergedRefs.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-overlays/esm/usePopper.js","../../../src/utils/isBrowser.js","../../../src/utils/debounce.js","../../../src/utils/isFunction.js","../../../src/utils/getStyleComputedProperty.js","../../../src/utils/getParentNode.js","../../../src/utils/getScrollParent.js","../../../src/utils/getReferenceNode.js","../../../src/utils/isIE.js","../../../src/utils/getOffsetParent.js","../../../src/utils/getRoot.js","../../../src/utils/findCommonOffsetParent.js","../../../src/utils/isOffsetContainer.js","../../../src/utils/getScroll.js","../../../src/utils/includeScroll.js","../../../src/utils/getBordersSize.js","../../../src/utils/getWindowSizes.js","../../../src/utils/getClientRect.js","../../../src/utils/getBoundingClientRect.js","../../../src/utils/getOffsetRectRelativeToArbitraryNode.js","../../../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../../src/utils/isFixed.js","../../../src/utils/getFixedPositionOffsetParent.js","../../../src/utils/getBoundaries.js","../../../src/utils/computeAutoPlacement.js","../../../src/utils/getReferenceOffsets.js","../../../src/utils/getOuterSizes.js","../../../src/utils/getOppositePlacement.js","../../../src/utils/getPopperOffsets.js","../../../src/utils/find.js","../../../src/utils/runModifiers.js","../../../src/utils/findIndex.js","../../../src/methods/update.js","../../../src/utils/isModifierEnabled.js","../../../src/utils/getSupportedPropertyName.js","../../../src/methods/destroy.js","../../../src/utils/getWindow.js","../../../src/utils/setupEventListeners.js","../../../src/methods/enableEventListeners.js","../../../src/methods/disableEventListeners.js","../../../src/utils/removeEventListeners.js","../../../src/utils/isNumeric.js","../../../src/utils/setStyles.js","../../../src/modifiers/computeStyle.js","../../../src/utils/isModifierRequired.js","../../../src/methods/placements.js","../../../src/utils/clockwise.js","../../../src/modifiers/flip.js","../../../src/modifiers/offset.js","../../../src/modifiers/index.js","../../../src/methods/defaults.js","../../../src/modifiers/shift.js","../../../src/modifiers/preventOverflow.js","../../../src/modifiers/keepTogether.js","../../../src/modifiers/arrow.js","../../../src/utils/getOppositeVariation.js","../../../src/modifiers/inner.js","../../../src/modifiers/hide.js","../../../src/utils/getRoundedOffsets.js","../../../src/modifiers/applyStyle.js","../../../src/utils/setAttributes.js","../../../src/index.js","../node_modules/react-overlays/esm/useRootClose.js","../node_modules/prop-types-extra/lib/isRequiredForA11y.js"],"names":["matchesImpl","DropdownContext","React","createContext","menuRef","toggleRef","onToggle","toggleNode","undefined","alignEnd","show","drop","useDropdownMenu","options","context","useContext","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","flip","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","usePopper","shouldUsePopper","current","handleClose","e","toggle","setMenu","menuElement","toggleElement","placement","popper","enabled","eventsEnabled","modifiers","_extends","arrow","element","menu","menuProps","ref","id","childArgs","hasShown","close","props","style","styles","arrowProps","arrowStyles","useRootClose","clickTrigger","disabled","propTypes","children","PropTypes","func","isRequired","bool","oneOf","object","string","DropdownMenu","_ref","args","_objectWithoutPropertiesLoose","displayName","defaultProps","useDropdownToggle","_useContext","setToggle","DropdownToggle","_useDropdownToggle","_useDropdownToggle$","focusFirstItemOnShow","itemSelector","defaultShow","Dropdown","rawShow","rawOnToggle","forceUpdate","useReducer","state","_useUncontrolled","useUncontrolled","useCallback","lastShow","value","useEffect","usePrevious","lastSourceEvent","focusInDropdown","event","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","type","focusType","node","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","createElement","Provider","onKeyDown","key","target","tagName","next","preventDefault","_next","Menu","Toggle","NavContext","as","SafeAnchor","DropdownItem","forwardRef","bsPrefix","className","eventKey","href","onClick","onSelect","propActive","active","Component","prefix","useBootstrapPrefix","onSelectCtx","SelectableContext","activeKey","makeEventKey","handleClick","classNames","useWrappedRefWithWarning","componentName","alignRight","showProps","_ref$as","isNavbar","NavbarContext","_useDropdownMenu","useMergedRefs","split","childBsPrefix","Button","toggleProps","uncontrolledProps","_useUncontrolled$as","navbar","handleToggle","nextShow","source","currentTarget","handleSelect","BaseDropdown","dropdownProps","Item","Header","createWithBsPrefix","role","Divider","toArray","Function","prototype","bind","slice","querySelectorAll","compareDocumentPosition","componentOrElement","ownerDocument","ReactDOM","findDOMNode","toFnRef","refA","refB","a","b","mergeRefs","useState","initialPopperStyles","position","top","left","opacity","pointerEvents","initialArrowStyles","referenceElement","popperElement","_temp","_ref$enabled","_ref$placement","_ref$positionFixed","positionFixed","_ref$eventsEnabled","_ref$modifiers","popperInstanceRef","hasArrow","scheduleUpdate","_useState","outOfBoundaries","setState","enableEventListeners","disableEventListeners","PopperJS","applyStyle","updateStateModifier","order","fn","data","offsets","hide","destroy","window","navigator","timeoutDuration","longerTimeoutBrowsers","i","isBrowser","called","scheduled","isFunction","functionToCheck","getType","getStyleComputedProperty","property","css","getParentNode","getScrollParent","overflow","overflowX","overflowY","getReferenceNode","reference","isIE11","isIE10","isIE","version","getOffsetParent","noOffsetParent","offsetParent","nodeName","getRoot","findCommonOffsetParent","element1","element2","Node","start","end","range","commonAncestorContainer","isOffsetContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","getBordersSize","axis","sideA","sideB","parseFloat","getSize","computedStyle","parseInt","getWindowSizes","getComputedStyle","getClientRect","height","getBoundingClientRect","result","sizes","width","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","parent","fixedPosition","runIsIE","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","isFixed","parentNode","getFixedPositionOffsetParent","el","getBoundaries","boundaries","boundariesElement","boundariesNode","isPaddingNumber","padding","getArea","computeAutoPlacement","rects","refRect","bottom","sortedAreas","Object","keys","filteredAreas","filter","computedPlacement","variation","getReferenceOffsets","commonOffsetParent","getOuterSizes","x","y","getOppositePlacement","hash","right","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","runModifiers","ends","prop","findIndex","cur","match","obj","update","this","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","prefixes","upperProp","toCheck","getWindow","setupEventListeners","passive","scrollElement","attachToScrollParents","callback","scrollParents","isBody","removeEventListeners","isNumeric","isNaN","isFinite","setStyles","unit","isFirefox","isModifierRequired","requesting","requested","validPlacements","placements","clockwise","counter","BEHAVIORS","parseOffset","useHeight","basePlacement","fragments","map","frag","divider","splitRegex","ops","mergeWithPrevious","op","str","size","toValue","index2","shiftvariation","isVertical","shiftOffsets","transformProp","popperStyles","transform","floor","opSide","len","sideCapitalized","altSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","placementOpposite","flipOrder","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flippedVariationByContent","flippedVariation","getOppositeVariation","subtractLength","bound","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","shouldRound","round","noRound","v","referenceWidth","popperWidth","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","getRoundedOffsets","prefixedProperty","invertTop","invertLeft","attributes","Popper","requestAnimationFrame","debounce","modifierOptions","Utils","PopperUtils","Defaults","noop","onRootClose","_ref$clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","warning","metaKey","altKey","ctrlKey","shiftKey","button","isLeftClickEvent","handleMouse","handleKeyUp","keyCode","doc","removeMouseCaptureListener","listen","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","forEach","remove","defineProperty","exports","default","validator","propName","location","propFullName","componentNameSafe","propFullNameSafe","Error","_len","arguments","_key","apply","concat","module"],"mappings":"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","file":"static/js/6.bfaf915d.chunk.js","sourcesContent":["var matchesImpl;\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import React from 'react';\nvar DropdownContext = React.createContext({\n  menuRef: function menuRef() {},\n  toggleRef: function toggleRef() {},\n  onToggle: function onToggle() {},\n  toggleNode: undefined,\n  alignEnd: null,\n  show: null,\n  drop: null\n});\nexport default DropdownContext;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? true : _options$usePopper;\n  var show = context.show == null ? options.show : context.show;\n  var alignEnd = context.alignEnd == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    if (!context.toggle) return;\n    context.toggle(false, e);\n  };\n\n  var drop = context.drop,\n      setMenu = context.setMenu,\n      menuElement = context.menuElement,\n      toggleElement = context.toggleElement;\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    eventsEnabled: !!show,\n    modifiers: _extends({\n      flip: {\n        enabled: !!flip\n      },\n      arrow: _extends({}, popperConfig.modifiers && popperConfig.modifiers.arrow, {\n        enabled: !!arrowElement,\n        element: arrowElement\n      })\n    }, popperConfig.modifiers)\n  });\n  var menu = null;\n  var menuProps = {\n    ref: setMenu,\n    'aria-labelledby': toggleElement && toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\nfunction DropdownMenu(_ref) {\n  var children = _ref.children,\n      options = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return args.hasShown ? children(args) : null;\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n      show = _useContext.show,\n      toggle = _useContext.toggle,\n      setToggle = _useContext.setToggle;\n\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolled } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string.isRequired,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```js\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\nvar defaultProps = {\n  itemSelector: '* > *'\n};\n/**\n * `Dropdown` is set of structural components for building, accessible dropdown menus with close-on-click,\n * keyboard navigation, and correct focus handling. As with all the react-overlay's\n * components its BYOS (bring your own styles). Dropdown is primarily\n * built from three base components, you should compose to build your Dropdowns.\n *\n * - `Dropdown`, which wraps the menu and toggle, and handles keyboard navigation\n * - `Dropdown.Toggle` generally a button that triggers the menu opening\n * - `Dropdown.Menu` The overlaid, menu, positioned to the toggle with PopperJs\n */\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      itemSelector = _ref.itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolled = useUncontrolled({\n    defaultShow: defaultShow,\n    show: rawShow,\n    onToggle: rawOnToggle\n  }, {\n    show: 'onToggle'\n  }),\n      show = _useUncontrolled.show,\n      onToggle = _useUncontrolled.onToggle;\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef();\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key,\n        target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.defaultProps = defaultProps;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import React from 'react';\nvar NavContext = React.createContext(null);\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SafeAnchor from './SafeAnchor';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    href: href,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n    onClick: handleClick\n  }), children);\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar\n  }),\n      hasShown = _useDropdownMenu.hasShown,\n      placement = _useDropdownMenu.placement,\n      show = _useDropdownMenu.show,\n      alignEnd = _useDropdownMenu.alignEnd,\n      close = _useDropdownMenu.close,\n      menuProps = _useDropdownMenu.props;\n\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      children = _ref.children,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"split\", \"className\", \"children\", \"childBsPrefix\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0],\n      toggle = _useDropdownToggle[1].toggle;\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return React.createElement(Component, _extends({\n    onClick: toggle,\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props), children);\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = React.forwardRef(function (uncontrolledProps, ref) {\n  var _useUncontrolled = useUncontrolled(uncontrolledProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"]);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document) source = 'rootClose';\n    onToggle(nextShow, event, {\n      source: source\n    });\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, function (_ref) {\n    var dropdownProps = _ref.props;\n    return React.createElement(Component, _extends({}, props, dropdownProps, {\n      ref: ref,\n      className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n    }));\n  }));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Toggle = DropdownToggle;\nDropdown.Menu = DropdownMenu;\nDropdown.Item = DropdownItem;\nDropdown.Header = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nDropdown.Divider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nexport default Dropdown;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/* eslint-disable no-bitwise, no-cond-assign */\n// HTML DOM and SVG DOM may have different support levels,\n// so we need to check on context instead of a document root element.\nexport default function contains(context, node) {\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import ReactDOM from 'react-dom';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nexport default function (componentOrElement) {\n  return ownerDocument(ReactDOM.findDOMNode(componentOrElement));\n}","import { useMemo } from 'react';\n\nvar toFnRef = function toFnRef(ref) {\n  return !ref || typeof ref === 'function' ? ref : function (value) {\n    ref.current = value;\n  };\n};\n\nexport function mergeRefs(refA, refB) {\n  var a = toFnRef(refA);\n  var b = toFnRef(refB);\n  return function (value) {\n    if (a) a(value);\n    if (b) b(value);\n  };\n}\n/**\n * Create and returns a single callback ref composed from two other Refs.\n *\n * ```tsx\n * const Button = React.forwardRef((props, ref) => {\n *   const [element, attachRef] = useCallbackRef<HTMLButtonElement>();\n *   const mergedRef = useMergedRefs(ref, attachRef);\n *\n *   return <button ref={mergedRef} {...props}/>\n * })\n * ```\n *\n * @param refA A Callback or mutable Ref\n * @param refB A Callback or mutable Ref\n */\n\nfunction useMergedRefs(refA, refB) {\n  return useMemo(function () {\n    return mergeRefs(refA, refB);\n  }, [refA, refB]);\n}\n\nexport default useMergedRefs;","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PopperJS from 'popper.js';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nvar initialPopperStyles = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  opacity: '0',\n  pointerEvents: 'none'\n};\nvar initialArrowStyles = {};\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param {HTMLElement} referenceElement The element\n * @param {HTMLElement} popperElement\n * @param {Object}      options\n * @param {Object}      options.modifiers Popper.js modifiers\n * @param {Boolean}     options.enabled toggle the popper functionality on/off\n * @param {String}      options.placement The popper element placement relative to the reference element\n * @param {Boolean}     options.positionFixed use fixed positioning\n * @param {Boolean}     options.eventsEnabled have Popper listen on window resize events to reposition the element\n */\n\nexport default function usePopper(referenceElement, popperElement, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$positionFixed = _ref.positionFixed,\n      positionFixed = _ref$positionFixed === void 0 ? false : _ref$positionFixed,\n      _ref$eventsEnabled = _ref.eventsEnabled,\n      eventsEnabled = _ref$eventsEnabled === void 0 ? true : _ref$eventsEnabled,\n      _ref$modifiers = _ref.modifiers,\n      modifiers = _ref$modifiers === void 0 ? {} : _ref$modifiers;\n\n  var popperInstanceRef = useRef();\n  var hasArrow = !!(modifiers.arrow && modifiers.arrow.element);\n  var scheduleUpdate = useCallback(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.scheduleUpdate();\n    }\n  }, []);\n\n  var _useState = useState({\n    placement: placement,\n    scheduleUpdate: scheduleUpdate,\n    outOfBoundaries: false,\n    styles: initialPopperStyles,\n    arrowStyles: initialArrowStyles\n  }),\n      state = _useState[0],\n      setState = _useState[1]; // A placement difference in state means popper determined a new placement\n  // apart from the props value. By the time the popper element is rendered with\n  // the new position Popper has already measured it, if the place change triggers\n  // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n  useEffect(function () {\n    scheduleUpdate();\n  }, [state.placement, scheduleUpdate]);\n  /** Toggle Events */\n\n  useEffect(function () {\n    if (popperInstanceRef.current) {\n      // eslint-disable-next-line no-unused-expressions\n      eventsEnabled ? popperInstanceRef.current.enableEventListeners() : popperInstanceRef.current.disableEventListeners();\n    }\n  }, [eventsEnabled]);\n  useEffect(function () {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    var arrow = modifiers.arrow && _extends({}, modifiers.arrow, {\n      element: modifiers.arrow.element\n    });\n\n    popperInstanceRef.current = new PopperJS(referenceElement, popperElement, {\n      placement: placement,\n      positionFixed: positionFixed,\n      modifiers: _extends({}, modifiers, {\n        arrow: arrow,\n        applyStyle: {\n          enabled: false\n        },\n        updateStateModifier: {\n          enabled: true,\n          order: 900,\n          fn: function fn(data) {\n            setState({\n              scheduleUpdate: scheduleUpdate,\n              styles: _extends({\n                position: data.offsets.popper.position\n              }, data.styles),\n              arrowStyles: data.arrowStyles,\n              outOfBoundaries: data.hide,\n              placement: data.placement\n            });\n          }\n        }\n      })\n    });\n    return function () {\n      if (popperInstanceRef.current !== null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = null;\n      }\n    }; // intentionally NOT re-running on new modifiers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, placement, positionFixed, referenceElement, popperElement, hasArrow]);\n  return state;\n}","export default typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst timeoutDuration = (function(){\n  const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}());\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nexport default function getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`]) +\n    parseFloat(styles[`border${sideB}Width`])\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.width;\n  const height =\n    sizes.height || element.clientHeight || result.height;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport getReferenceNode from './getReferenceNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\nimport getReferenceNode from './getReferenceNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`]);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`]);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './utils/ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>|HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object}  options\n * @param {boolean} options.disabled\n * @param {string}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\n\n\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = ref && ('current' in ref ? ref.current : ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined;\n    var doc = ownerDocument(ref.current); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, handleMouse);\n    var removeKeyupListener = listen(doc, 'keyup', handleKeyUp);\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isRequiredForA11y;\nfunction isRequiredForA11y(validator) {\n  return function validate(props, propName, componentName, location, propFullName) {\n    var componentNameSafe = componentName || '<<anonymous>>';\n    var propFullNameSafe = propFullName || propName;\n\n    if (props[propName] == null) {\n      return new Error('The ' + location + ' `' + propFullNameSafe + '` is required to make ' + ('`' + componentNameSafe + '` accessible for users of assistive ') + 'technologies such as screen readers.');\n    }\n\n    for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n      args[_key - 5] = arguments[_key];\n    }\n\n    return validator.apply(undefined, [props, propName, componentName, location, propFullName].concat(args));\n  };\n}\nmodule.exports = exports['default'];"],"sourceRoot":""}